"The response object from a local register user request"
type RegisterLocalUserResponse {
	"Whether the registration successfully created a user or not"
	success: Boolean!
	"An error will be described if success is false"
	error: String
	"The user object"
	user: User
}

"The response from a successful login or token refresh request"
type TokenResponse {
	"JSON web token to authenticate API requests"
	token: String!
	"JSON web token to refresh the token"
	refreshToken: String!
}

input LoginLocalUserInput {
	"The email or username (either) of the user"
	userIdentifier: String!
	"The user's decrypted password"
	password: String!
}

input RefreshAccessTokenInput {
	"The refresh token, that is used to refresh the access token"
	refreshToken: String!
}

input RegisterLocalUserInput {
	"(Unique) The user's email"
	email: EmailAddress!
	"The user's decrypted password"
	password: UserPassword!
	"(Unique) The user's username"
	username: String!
}

extend type Mutation {
	"Logins in the user, and returns an expiring access token"
	loginLocalUser(input: LoginLocalUserInput!): TokenResponse @rateLimit(window: "1m", max: 30)

	"Refreshes the currently logged-in user's access token"
	refreshAccessToken(input: RegisterLocalUserInput!): TokenResponse
		@rateLimit(window: "1m", max: 30)

	"Performs local authentication (custom username + password)"
	registerLocalUser(input: RegisterLocalUserInput!): RegisterLocalUserResponse
		@rateLimit(window: "1m", max: 1)

	"Resends the account verification email to the logged-in user"
	resendVerifyEmail: Boolean! @rateLimit(window: "1m", max: 30)
}
